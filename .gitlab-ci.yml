before_script:
- set GRADLE_USER_HOME=$(pwd)/.gradle
# - npm install -g yarn

stages:
  - buildFrontEnd
  # - clean
  - sonarqube
  - build
  # - test
  # - assemble
  - deployFrontEnd
  - deployBackEnd


buildFrontEnd:
    stage: buildFrontEnd
    tags: 
        - front-end
    script:
        - cd reactFrontEnd
        - echo "Build stage started"
        - npm install
        - npm run build
        - echo "Build successful"
    artifacts:
        expire_in: 1 hour
        paths:
            - build
  
# clean:
#   stage: clean
#   tags: 
#     - back-end
#   script:
#     - cd restAPI
#     - ./gradlew clean
#     - echo "Clean script over"
#   # artifacts:
#   #   paths:
#   #     - build/libs/*.jar

sonarqube:
 stage: sonarqube
 tags: 
   - back-end
 script:
   - cd restAPI
   - ./gradlew sonarqube -PsonarPassword=1207

build:
  stage: build
  tags: 
    - back-end
  script:
    - cd restAPI
    - ./gradlew build
    - echo "Build script over"
  artifacts:
    paths:
      - build/libs/*.jar

# test:
#   stage: test
#   tags: 
#     - back-end
#   script:
#     - cd restAPI
#     - ./gradlew test
#     - echo "Test script over"
#   artifacts:
#     paths:
#       - build/libs/*.jar  

# assemble:
#   stage: assemble
#   tags: 
#     - back-end
#   script:
#     - cd restAPI
#     - ./gradlew assemble
#     - echo "Assemble script over"
#   artifacts:
#     paths:
#       - build/libs/*.jar

deploy-front-end:
  stage: deployFrontEnd
  tags: 
    - front-end
  script:
    - cd reactFrontEnd
    - echo "Deploy stage started"
    - docker run -it -p 3000:3000 --rm --name front-end react-front-end .
    - echo "Deploy successful"
        
deploy-back-end:
  tags: 
    - front-end
  script:
    - cd restAPI
    - echo "Deploy stage back-end started"
    - docker run -it -p 8000:8000 --rm --name back-end spring-api .
    - echo "Deploy successful"

after_script:
  - echo "This is form the shell runner. After Script"

